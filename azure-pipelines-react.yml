# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  batch: 'true'
  branches:
    include:
    - main
  paths:
    include:
      - React/*
      - azure-pipelines-react.yml

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'aa76bded-5711-4a94-960d-79a40489ad6a'

  # Web app name
  webAppName: 'veil'

  # Environment name
  environmentName: 'veil'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Redshift-OnPrem-Linux
      vmImage: ubuntu-latest

    steps:

    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSource: 'spec'
        versionSpec: '18.x'
        checkLatest: true
    
    - task: Npm@1
      displayName: 'Run Node.js install'
      inputs:
        command: 'install'
        workingDir: '$(System.DefaultWorkingDirectory)/React/vvfrontend'

    - task: Npm@1
      displayName: 'Run Node.js run build'
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)/React/vvfrontend'
        customCommand: 'run build --if-present'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/React/vvfrontend/'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

#- stage: Deploy
#  displayName: Deploy stage
#  dependsOn: Build
#  condition: succeeded()
#  jobs:
#  - deployment: Deploy
#    displayName: Deploy
#    environment: $(environmentName)
#    pool:
#      vmImage: $(vmImageName)
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#          - task: AzureRmWebAppDeployment@4
#            displayName: 'Azure App Service Deploy: veil'
#            inputs:
#              azureSubscription: $(azureSubscription)
#              appType: webAppLinux
#              WebAppName: $(webAppName)
#              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
#              RuntimeStack: 'NODE|18-lts'
#              StartupCommand: 'npm run start'